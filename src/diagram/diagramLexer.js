// Generated from DiagramLexer.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u0012\u0091\b\u0001\b\u0001\u0004\u0002\t\u0002\u0004\u0003",
    "\t\u0003\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006",
    "\u0004\u0007\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b",
    "\t\u000b\u0004\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f",
    "\u0004\u0010\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0003\u0002",
    "\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002",
    "\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004",
    "\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004",
    "\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004",
    "\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0005\u0004J\n\u0004",
    "\u0003\u0005\u0006\u0005M\n\u0005\r\u0005\u000e\u0005N\u0003\u0006\u0006",
    "\u0006R\n\u0006\r\u0006\u000e\u0006S\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\b\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\n",
    "\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003",
    "\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0007\u000el\n\u000e\f\u000e",
    "\u000e\u000eo\u000b\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003",
    "\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0007",
    "\u000fz\n\u000f\f\u000f\u000e\u000f}\u000b\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u0010\u0006\u0010\u0082\n\u0010\r\u0010\u000e\u0010\u0083\u0003",
    "\u0010\u0003\u0010\u0003\u0011\u0006\u0011\u0089\n\u0011\r\u0011\u000e",
    "\u0011\u008a\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012",
    "\u0003m\u0002\u0013\u0004\u0003\u0006\u0004\b\u0005\n\u0006\f\u0007",
    "\u000e\b\u0010\t\u0012\n\u0014\u000b\u0016\f\u0018\r\u001a\u000e\u001c",
    "\u000f\u001e\u0010 \u0011\"\u0012$\u0002\u0004\u0002\u0003\u0007\u0005",
    "\u00022;C\\aa\u0005\u00022;aac|\u0004\u0002\f\f\u000f\u000f\u0005\u0002",
    "\u000b\f\u000f\u000f\"\"\u0003\u0002\u007f\u007f\u0002\u009a\u0002\u0004",
    "\u0003\u0002\u0002\u0002\u0002\u0006\u0003\u0002\u0002\u0002\u0002\b",
    "\u0003\u0002\u0002\u0002\u0002\n\u0003\u0002\u0002\u0002\u0002\f\u0003",
    "\u0002\u0002\u0002\u0002\u000e\u0003\u0002\u0002\u0002\u0002\u0010\u0003",
    "\u0002\u0002\u0002\u0002\u0012\u0003\u0002\u0002\u0002\u0002\u0014\u0003",
    "\u0002\u0002\u0002\u0002\u0016\u0003\u0002\u0002\u0002\u0002\u0018\u0003",
    "\u0002\u0002\u0002\u0002\u001a\u0003\u0002\u0002\u0002\u0002\u001c\u0003",
    "\u0002\u0002\u0002\u0002\u001e\u0003\u0002\u0002\u0002\u0002 \u0003",
    "\u0002\u0002\u0002\u0003\"\u0003\u0002\u0002\u0002\u0003$\u0003\u0002",
    "\u0002\u0002\u0004&\u0003\u0002\u0002\u0002\u0006.\u0003\u0002\u0002",
    "\u0002\bI\u0003\u0002\u0002\u0002\nL\u0003\u0002\u0002\u0002\fQ\u0003",
    "\u0002\u0002\u0002\u000eU\u0003\u0002\u0002\u0002\u0010Y\u0003\u0002",
    "\u0002\u0002\u0012]\u0003\u0002\u0002\u0002\u0014_\u0003\u0002\u0002",
    "\u0002\u0016a\u0003\u0002\u0002\u0002\u0018c\u0003\u0002\u0002\u0002",
    "\u001ae\u0003\u0002\u0002\u0002\u001cg\u0003\u0002\u0002\u0002\u001e",
    "u\u0003\u0002\u0002\u0002 \u0081\u0003\u0002\u0002\u0002\"\u0088\u0003",
    "\u0002\u0002\u0002$\u008c\u0003\u0002\u0002\u0002&\'\u0007i\u0002\u0002",
    "\'(\u0007n\u0002\u0002()\u0007q\u0002\u0002)*\u0007d\u0002\u0002*+\u0007",
    "c\u0002\u0002+,\u0007n\u0002\u0002,-\u0007<\u0002\u0002-\u0005\u0003",
    "\u0002\u0002\u0002./\u0007u\u0002\u0002/0\u0007g\u0002\u000201\u0007",
    "e\u0002\u000212\u0007v\u0002\u000223\u0007k\u0002\u000234\u0007q\u0002",
    "\u000245\u0007p\u0002\u000256\u0007<\u0002\u00026\u0007\u0003\u0002",
    "\u0002\u000278\u0007/\u0002\u000289\u0007/\u0002\u00029J\u0007@\u0002",
    "\u0002:;\u0007>\u0002\u0002;<\u0007/\u0002\u0002<J\u0007/\u0002\u0002",
    "=>\u0007>\u0002\u0002>?\u0007/\u0002\u0002?J\u0007@\u0002\u0002@A\u0007",
    "?\u0002\u0002AB\u0007?\u0002\u0002BJ\u0007@\u0002\u0002CD\u0007>\u0002",
    "\u0002DE\u0007?\u0002\u0002EJ\u0007?\u0002\u0002FG\u0007>\u0002\u0002",
    "GH\u0007?\u0002\u0002HJ\u0007@\u0002\u0002I7\u0003\u0002\u0002\u0002",
    "I:\u0003\u0002\u0002\u0002I=\u0003\u0002\u0002\u0002I@\u0003\u0002\u0002",
    "\u0002IC\u0003\u0002\u0002\u0002IF\u0003\u0002\u0002\u0002J\t\u0003",
    "\u0002\u0002\u0002KM\t\u0002\u0002\u0002LK\u0003\u0002\u0002\u0002M",
    "N\u0003\u0002\u0002\u0002NL\u0003\u0002\u0002\u0002NO\u0003\u0002\u0002",
    "\u0002O\u000b\u0003\u0002\u0002\u0002PR\t\u0003\u0002\u0002QP\u0003",
    "\u0002\u0002\u0002RS\u0003\u0002\u0002\u0002SQ\u0003\u0002\u0002\u0002",
    "ST\u0003\u0002\u0002\u0002T\r\u0003\u0002\u0002\u0002UV\u0007}\u0002",
    "\u0002VW\u0003\u0002\u0002\u0002WX\b\u0007\u0002\u0002X\u000f\u0003",
    "\u0002\u0002\u0002YZ\u0007\u007f\u0002\u0002Z[\u0003\u0002\u0002\u0002",
    "[\\\b\b\u0003\u0002\\\u0011\u0003\u0002\u0002\u0002]^\u0007*\u0002\u0002",
    "^\u0013\u0003\u0002\u0002\u0002_`\u0007+\u0002\u0002`\u0015\u0003\u0002",
    "\u0002\u0002ab\u0007]\u0002\u0002b\u0017\u0003\u0002\u0002\u0002cd\u0007",
    "_\u0002\u0002d\u0019\u0003\u0002\u0002\u0002ef\u0007?\u0002\u0002f\u001b",
    "\u0003\u0002\u0002\u0002gh\u00071\u0002\u0002hi\u0007,\u0002\u0002i",
    "m\u0003\u0002\u0002\u0002jl\u000b\u0002\u0002\u0002kj\u0003\u0002\u0002",
    "\u0002lo\u0003\u0002\u0002\u0002mn\u0003\u0002\u0002\u0002mk\u0003\u0002",
    "\u0002\u0002np\u0003\u0002\u0002\u0002om\u0003\u0002\u0002\u0002pq\u0007",
    ",\u0002\u0002qr\u00071\u0002\u0002rs\u0003\u0002\u0002\u0002st\b\u000e",
    "\u0004\u0002t\u001d\u0003\u0002\u0002\u0002uv\u00071\u0002\u0002vw\u0007",
    "1\u0002\u0002w{\u0003\u0002\u0002\u0002xz\n\u0004\u0002\u0002yx\u0003",
    "\u0002\u0002\u0002z}\u0003\u0002\u0002\u0002{y\u0003\u0002\u0002\u0002",
    "{|\u0003\u0002\u0002\u0002|~\u0003\u0002\u0002\u0002}{\u0003\u0002\u0002",
    "\u0002~\u007f\b\u000f\u0004\u0002\u007f\u001f\u0003\u0002\u0002\u0002",
    "\u0080\u0082\t\u0005\u0002\u0002\u0081\u0080\u0003\u0002\u0002\u0002",
    "\u0082\u0083\u0003\u0002\u0002\u0002\u0083\u0081\u0003\u0002\u0002\u0002",
    "\u0083\u0084\u0003\u0002\u0002\u0002\u0084\u0085\u0003\u0002\u0002\u0002",
    "\u0085\u0086\b\u0010\u0004\u0002\u0086!\u0003\u0002\u0002\u0002\u0087",
    "\u0089\n\u0006\u0002\u0002\u0088\u0087\u0003\u0002\u0002\u0002\u0089",
    "\u008a\u0003\u0002\u0002\u0002\u008a\u0088\u0003\u0002\u0002\u0002\u008a",
    "\u008b\u0003\u0002\u0002\u0002\u008b#\u0003\u0002\u0002\u0002\u008c",
    "\u008d\u0007\u007f\u0002\u0002\u008d\u008e\u0003\u0002\u0002\u0002\u008e",
    "\u008f\b\u0012\u0005\u0002\u008f\u0090\b\u0012\u0003\u0002\u0090%\u0003",
    "\u0002\u0002\u0002\u000b\u0002\u0003INSm{\u0083\u008a\u0006\u0007\u0003",
    "\u0002\u0006\u0002\u0002\b\u0002\u0002\t\t\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class DiagramLexer extends antlr4.Lexer {

    static grammarFileName = "DiagramLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "IN_DESCRIPTION" ];
	static literalNames = [ null, "'global:'", "'section:'", null, null, null, 
                         "'{'", null, "'('", "')'", "'['", "']'", "'='" ];
	static symbolicNames = [ null, "GLOBAL", "SECTION", "ARROW", "SYMBOL", 
                          "ATTR", "CURL_OPEN", "CURL_CLOSE", "OPEN_PARENTHESES", 
                          "CLOSE_PARENTHESES", "OPEN_BRACKET", "CLOSE_BRACKET", 
                          "EQUALS", "COMMENT", "LINE_COMMENT", "WS", "TEXT" ];
	static ruleNames = [ "GLOBAL", "SECTION", "ARROW", "SYMBOL", "ATTR", "CURL_OPEN", 
                      "CURL_CLOSE", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", 
                      "OPEN_BRACKET", "CLOSE_BRACKET", "EQUALS", "COMMENT", 
                      "LINE_COMMENT", "WS", "TEXT", "DQUOTE_IN_STRING" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

DiagramLexer.EOF = antlr4.Token.EOF;
DiagramLexer.GLOBAL = 1;
DiagramLexer.SECTION = 2;
DiagramLexer.ARROW = 3;
DiagramLexer.SYMBOL = 4;
DiagramLexer.ATTR = 5;
DiagramLexer.CURL_OPEN = 6;
DiagramLexer.CURL_CLOSE = 7;
DiagramLexer.OPEN_PARENTHESES = 8;
DiagramLexer.CLOSE_PARENTHESES = 9;
DiagramLexer.OPEN_BRACKET = 10;
DiagramLexer.CLOSE_BRACKET = 11;
DiagramLexer.EQUALS = 12;
DiagramLexer.COMMENT = 13;
DiagramLexer.LINE_COMMENT = 14;
DiagramLexer.WS = 15;
DiagramLexer.TEXT = 16;

DiagramLexer.IN_DESCRIPTION = 1;




