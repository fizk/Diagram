// Generated from diagram.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u000fx\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0003\u0002\u0003\u0002\u0003",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003",
    "\u0005\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003",
    "\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0005\tK\n\t\u0003\n\u0003\n\u0007\nO\n\n\f\n\u000e\nR\u000b\n\u0003",
    "\u000b\u0006\u000bU\n\u000b\r\u000b\u000e\u000bV\u0003\f\u0006\fZ\n",
    "\f\r\f\u000e\f[\u0003\f\u0003\f\u0003\r\u0003\r\u0003\r\u0003\r\u0007",
    "\rd\n\r\f\r\u000e\rg\u000b\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r",
    "\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0007\u000er\n\u000e",
    "\f\u000e\u000e\u000eu\u000b\u000e\u0003\u000e\u0003\u000e\u0003e\u0002",
    "\u000f\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f",
    "\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u0003",
    "\u0002\u0007\u0003\u0002C\\\u0005\u00022;C\\aa\u0007\u0002//2;C\\aa",
    "c|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0004\u0002\f\f\u000f\u000f\u0002",
    "\u0081\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002",
    "\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002",
    "\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002",
    "\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002",
    "\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002",
    "\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002",
    "\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0003\u001d\u0003\u0002\u0002",
    "\u0002\u0005%\u0003\u0002\u0002\u0002\u0007.\u0003\u0002\u0002\u0002",
    "\t0\u0003\u0002\u0002\u0002\u000b2\u0003\u0002\u0002\u0002\r4\u0003",
    "\u0002\u0002\u0002\u000f6\u0003\u0002\u0002\u0002\u0011J\u0003\u0002",
    "\u0002\u0002\u0013L\u0003\u0002\u0002\u0002\u0015T\u0003\u0002\u0002",
    "\u0002\u0017Y\u0003\u0002\u0002\u0002\u0019_\u0003\u0002\u0002\u0002",
    "\u001bm\u0003\u0002\u0002\u0002\u001d\u001e\u0007i\u0002\u0002\u001e",
    "\u001f\u0007n\u0002\u0002\u001f \u0007q\u0002\u0002 !\u0007d\u0002\u0002",
    "!\"\u0007c\u0002\u0002\"#\u0007n\u0002\u0002#$\u0007<\u0002\u0002$\u0004",
    "\u0003\u0002\u0002\u0002%&\u0007u\u0002\u0002&\'\u0007g\u0002\u0002",
    "\'(\u0007e\u0002\u0002()\u0007v\u0002\u0002)*\u0007k\u0002\u0002*+\u0007",
    "q\u0002\u0002+,\u0007p\u0002\u0002,-\u0007<\u0002\u0002-\u0006\u0003",
    "\u0002\u0002\u0002./\u0007*\u0002\u0002/\b\u0003\u0002\u0002\u00020",
    "1\u0007+\u0002\u00021\n\u0003\u0002\u0002\u000223\u0007]\u0002\u0002",
    "3\f\u0003\u0002\u0002\u000245\u0007_\u0002\u00025\u000e\u0003\u0002",
    "\u0002\u000267\u0007?\u0002\u00027\u0010\u0003\u0002\u0002\u000289\u0007",
    "/\u0002\u00029:\u0007/\u0002\u0002:K\u0007@\u0002\u0002;<\u0007>\u0002",
    "\u0002<=\u0007/\u0002\u0002=K\u0007/\u0002\u0002>?\u0007>\u0002\u0002",
    "?@\u0007/\u0002\u0002@K\u0007@\u0002\u0002AB\u0007?\u0002\u0002BC\u0007",
    "?\u0002\u0002CK\u0007@\u0002\u0002DE\u0007>\u0002\u0002EF\u0007?\u0002",
    "\u0002FK\u0007?\u0002\u0002GH\u0007>\u0002\u0002HI\u0007?\u0002\u0002",
    "IK\u0007@\u0002\u0002J8\u0003\u0002\u0002\u0002J;\u0003\u0002\u0002",
    "\u0002J>\u0003\u0002\u0002\u0002JA\u0003\u0002\u0002\u0002JD\u0003\u0002",
    "\u0002\u0002JG\u0003\u0002\u0002\u0002K\u0012\u0003\u0002\u0002\u0002",
    "LP\t\u0002\u0002\u0002MO\t\u0003\u0002\u0002NM\u0003\u0002\u0002\u0002",
    "OR\u0003\u0002\u0002\u0002PN\u0003\u0002\u0002\u0002PQ\u0003\u0002\u0002",
    "\u0002Q\u0014\u0003\u0002\u0002\u0002RP\u0003\u0002\u0002\u0002SU\t",
    "\u0004\u0002\u0002TS\u0003\u0002\u0002\u0002UV\u0003\u0002\u0002\u0002",
    "VT\u0003\u0002\u0002\u0002VW\u0003\u0002\u0002\u0002W\u0016\u0003\u0002",
    "\u0002\u0002XZ\t\u0005\u0002\u0002YX\u0003\u0002\u0002\u0002Z[\u0003",
    "\u0002\u0002\u0002[Y\u0003\u0002\u0002\u0002[\\\u0003\u0002\u0002\u0002",
    "\\]\u0003\u0002\u0002\u0002]^\b\f\u0002\u0002^\u0018\u0003\u0002\u0002",
    "\u0002_`\u00071\u0002\u0002`a\u0007,\u0002\u0002ae\u0003\u0002\u0002",
    "\u0002bd\u000b\u0002\u0002\u0002cb\u0003\u0002\u0002\u0002dg\u0003\u0002",
    "\u0002\u0002ef\u0003\u0002\u0002\u0002ec\u0003\u0002\u0002\u0002fh\u0003",
    "\u0002\u0002\u0002ge\u0003\u0002\u0002\u0002hi\u0007,\u0002\u0002ij",
    "\u00071\u0002\u0002jk\u0003\u0002\u0002\u0002kl\b\r\u0002\u0002l\u001a",
    "\u0003\u0002\u0002\u0002mn\u00071\u0002\u0002no\u00071\u0002\u0002o",
    "s\u0003\u0002\u0002\u0002pr\n\u0006\u0002\u0002qp\u0003\u0002\u0002",
    "\u0002ru\u0003\u0002\u0002\u0002sq\u0003\u0002\u0002\u0002st\u0003\u0002",
    "\u0002\u0002tv\u0003\u0002\u0002\u0002us\u0003\u0002\u0002\u0002vw\b",
    "\u000e\u0002\u0002w\u001c\u0003\u0002\u0002\u0002\t\u0002JPV[es\u0003",
    "\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class diagramLexer extends antlr4.Lexer {

    static grammarFileName = "diagram.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'global:'", "'section:'", "'('", "')'", 
                         "'['", "']'", "'='" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          "ARROW", "SYMBOL", "ATTR", "WS", "COMMENT", "LINE_COMMENT" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "ARROW", "SYMBOL", "ATTR", "WS", "COMMENT", "LINE_COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

diagramLexer.EOF = antlr4.Token.EOF;
diagramLexer.T__0 = 1;
diagramLexer.T__1 = 2;
diagramLexer.T__2 = 3;
diagramLexer.T__3 = 4;
diagramLexer.T__4 = 5;
diagramLexer.T__5 = 6;
diagramLexer.T__6 = 7;
diagramLexer.ARROW = 8;
diagramLexer.SYMBOL = 9;
diagramLexer.ATTR = 10;
diagramLexer.WS = 11;
diagramLexer.COMMENT = 12;
diagramLexer.LINE_COMMENT = 13;



